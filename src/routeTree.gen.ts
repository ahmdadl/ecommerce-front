/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LocaleIndexImport } from './routes/$locale/index'
import { Route as LocaleTermsAndConditionsImport } from './routes/$locale/terms-and-conditions'
import { Route as LocalePrivacyPolicyImport } from './routes/$locale/privacy-policy'
import { Route as LocaleFaqImport } from './routes/$locale/faq'
import { Route as LocaleContactUsImport } from './routes/$locale/contact-us'
import { Route as LocaleCompareListImport } from './routes/$locale/compare-list'
import { Route as LocaleProfileRouteImport } from './routes/$locale/profile/route'
import { Route as LocaleAuthRouteImport } from './routes/$locale/_auth/route'
import { Route as LocaleProfileIndexImport } from './routes/$locale/profile/index'
import { Route as LocaleProfileWishlistImport } from './routes/$locale/profile/wishlist'
import { Route as LocaleProfileChangePasswordImport } from './routes/$locale/profile/change-password'
import { Route as LocaleProfileAddressesImport } from './routes/$locale/profile/addresses'
import { Route as LocaleProductsSlugImport } from './routes/$locale/products/$slug'
import { Route as LocaleCatalogShopImport } from './routes/$locale/_catalog/shop'
import { Route as LocaleCartCheckoutImport } from './routes/$locale/_cart/checkout'
import { Route as LocaleCartCartImport } from './routes/$locale/_cart/cart'
import { Route as LocaleAuthResetPasswordImport } from './routes/$locale/_auth/reset-password'
import { Route as LocaleAuthRegisterImport } from './routes/$locale/_auth/register'
import { Route as LocaleAuthLoginImport } from './routes/$locale/_auth/login'
import { Route as LocaleAuthForgetPasswordImport } from './routes/$locale/_auth/forget-password'
import { Route as LocaleProfileOrdersIndexImport } from './routes/$locale/profile/orders/index'
import { Route as LocaleCatalogCategoriesIndexImport } from './routes/$locale/_catalog/categories/index'
import { Route as LocaleCatalogBrandsIndexImport } from './routes/$locale/_catalog/brands/index'
import { Route as LocaleCatalogTagsSlugImport } from './routes/$locale/_catalog/tags/$slug'
import { Route as LocaleCatalogCategoriesSlugImport } from './routes/$locale/_catalog/categories/$slug'
import { Route as LocaleCatalogBrandsSlugImport } from './routes/$locale/_catalog/brands/$slug'
import { Route as LocaleProfileOrdersIdIndexImport } from './routes/$locale/profile/orders/$id/index'
import { Route as LocaleProfileOrdersIdTrackImport } from './routes/$locale/profile/orders/$id/track'

// Create Virtual Routes

const LocaleImport = createFileRoute('/$locale')()

// Create/Update Routes

const LocaleRoute = LocaleImport.update({
  id: '/$locale',
  path: '/$locale',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LocaleIndexRoute = LocaleIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleTermsAndConditionsRoute = LocaleTermsAndConditionsImport.update({
  id: '/terms-and-conditions',
  path: '/terms-and-conditions',
  getParentRoute: () => LocaleRoute,
} as any)

const LocalePrivacyPolicyRoute = LocalePrivacyPolicyImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleFaqRoute = LocaleFaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleContactUsRoute = LocaleContactUsImport.update({
  id: '/contact-us',
  path: '/contact-us',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleCompareListRoute = LocaleCompareListImport.update({
  id: '/compare-list',
  path: '/compare-list',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleProfileRouteRoute = LocaleProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleAuthRouteRoute = LocaleAuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleProfileIndexRoute = LocaleProfileIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LocaleProfileRouteRoute,
} as any)

const LocaleProfileWishlistRoute = LocaleProfileWishlistImport.update({
  id: '/wishlist',
  path: '/wishlist',
  getParentRoute: () => LocaleProfileRouteRoute,
} as any)

const LocaleProfileChangePasswordRoute =
  LocaleProfileChangePasswordImport.update({
    id: '/change-password',
    path: '/change-password',
    getParentRoute: () => LocaleProfileRouteRoute,
  } as any)

const LocaleProfileAddressesRoute = LocaleProfileAddressesImport.update({
  id: '/addresses',
  path: '/addresses',
  getParentRoute: () => LocaleProfileRouteRoute,
} as any)

const LocaleProductsSlugRoute = LocaleProductsSlugImport.update({
  id: '/products/$slug',
  path: '/products/$slug',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleCatalogShopRoute = LocaleCatalogShopImport.update({
  id: '/_catalog/shop',
  path: '/shop',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleCartCheckoutRoute = LocaleCartCheckoutImport.update({
  id: '/_cart/checkout',
  path: '/checkout',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleCartCartRoute = LocaleCartCartImport.update({
  id: '/_cart/cart',
  path: '/cart',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleAuthResetPasswordRoute = LocaleAuthResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => LocaleAuthRouteRoute,
} as any)

const LocaleAuthRegisterRoute = LocaleAuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => LocaleAuthRouteRoute,
} as any)

const LocaleAuthLoginRoute = LocaleAuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LocaleAuthRouteRoute,
} as any)

const LocaleAuthForgetPasswordRoute = LocaleAuthForgetPasswordImport.update({
  id: '/forget-password',
  path: '/forget-password',
  getParentRoute: () => LocaleAuthRouteRoute,
} as any)

const LocaleProfileOrdersIndexRoute = LocaleProfileOrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => LocaleProfileRouteRoute,
} as any)

const LocaleCatalogCategoriesIndexRoute =
  LocaleCatalogCategoriesIndexImport.update({
    id: '/_catalog/categories/',
    path: '/categories/',
    getParentRoute: () => LocaleRoute,
  } as any)

const LocaleCatalogBrandsIndexRoute = LocaleCatalogBrandsIndexImport.update({
  id: '/_catalog/brands/',
  path: '/brands/',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleCatalogTagsSlugRoute = LocaleCatalogTagsSlugImport.update({
  id: '/_catalog/tags/$slug',
  path: '/tags/$slug',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleCatalogCategoriesSlugRoute =
  LocaleCatalogCategoriesSlugImport.update({
    id: '/_catalog/categories/$slug',
    path: '/categories/$slug',
    getParentRoute: () => LocaleRoute,
  } as any)

const LocaleCatalogBrandsSlugRoute = LocaleCatalogBrandsSlugImport.update({
  id: '/_catalog/brands/$slug',
  path: '/brands/$slug',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleProfileOrdersIdIndexRoute = LocaleProfileOrdersIdIndexImport.update(
  {
    id: '/orders/$id/',
    path: '/orders/$id/',
    getParentRoute: () => LocaleProfileRouteRoute,
  } as any,
)

const LocaleProfileOrdersIdTrackRoute = LocaleProfileOrdersIdTrackImport.update(
  {
    id: '/orders/$id/track',
    path: '/orders/$id/track',
    getParentRoute: () => LocaleProfileRouteRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$locale': {
      id: '/$locale'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleImport
      parentRoute: typeof rootRoute
    }
    '/$locale/_auth': {
      id: '/$locale/_auth'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleAuthRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/profile': {
      id: '/$locale/profile'
      path: '/profile'
      fullPath: '/$locale/profile'
      preLoaderRoute: typeof LocaleProfileRouteImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/compare-list': {
      id: '/$locale/compare-list'
      path: '/compare-list'
      fullPath: '/$locale/compare-list'
      preLoaderRoute: typeof LocaleCompareListImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/contact-us': {
      id: '/$locale/contact-us'
      path: '/contact-us'
      fullPath: '/$locale/contact-us'
      preLoaderRoute: typeof LocaleContactUsImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/faq': {
      id: '/$locale/faq'
      path: '/faq'
      fullPath: '/$locale/faq'
      preLoaderRoute: typeof LocaleFaqImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/privacy-policy': {
      id: '/$locale/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/$locale/privacy-policy'
      preLoaderRoute: typeof LocalePrivacyPolicyImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/terms-and-conditions': {
      id: '/$locale/terms-and-conditions'
      path: '/terms-and-conditions'
      fullPath: '/$locale/terms-and-conditions'
      preLoaderRoute: typeof LocaleTermsAndConditionsImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/': {
      id: '/$locale/'
      path: '/'
      fullPath: '/$locale/'
      preLoaderRoute: typeof LocaleIndexImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_auth/forget-password': {
      id: '/$locale/_auth/forget-password'
      path: '/forget-password'
      fullPath: '/$locale/forget-password'
      preLoaderRoute: typeof LocaleAuthForgetPasswordImport
      parentRoute: typeof LocaleAuthRouteImport
    }
    '/$locale/_auth/login': {
      id: '/$locale/_auth/login'
      path: '/login'
      fullPath: '/$locale/login'
      preLoaderRoute: typeof LocaleAuthLoginImport
      parentRoute: typeof LocaleAuthRouteImport
    }
    '/$locale/_auth/register': {
      id: '/$locale/_auth/register'
      path: '/register'
      fullPath: '/$locale/register'
      preLoaderRoute: typeof LocaleAuthRegisterImport
      parentRoute: typeof LocaleAuthRouteImport
    }
    '/$locale/_auth/reset-password': {
      id: '/$locale/_auth/reset-password'
      path: '/reset-password'
      fullPath: '/$locale/reset-password'
      preLoaderRoute: typeof LocaleAuthResetPasswordImport
      parentRoute: typeof LocaleAuthRouteImport
    }
    '/$locale/_cart/cart': {
      id: '/$locale/_cart/cart'
      path: '/cart'
      fullPath: '/$locale/cart'
      preLoaderRoute: typeof LocaleCartCartImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_cart/checkout': {
      id: '/$locale/_cart/checkout'
      path: '/checkout'
      fullPath: '/$locale/checkout'
      preLoaderRoute: typeof LocaleCartCheckoutImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_catalog/shop': {
      id: '/$locale/_catalog/shop'
      path: '/shop'
      fullPath: '/$locale/shop'
      preLoaderRoute: typeof LocaleCatalogShopImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/products/$slug': {
      id: '/$locale/products/$slug'
      path: '/products/$slug'
      fullPath: '/$locale/products/$slug'
      preLoaderRoute: typeof LocaleProductsSlugImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/profile/addresses': {
      id: '/$locale/profile/addresses'
      path: '/addresses'
      fullPath: '/$locale/profile/addresses'
      preLoaderRoute: typeof LocaleProfileAddressesImport
      parentRoute: typeof LocaleProfileRouteImport
    }
    '/$locale/profile/change-password': {
      id: '/$locale/profile/change-password'
      path: '/change-password'
      fullPath: '/$locale/profile/change-password'
      preLoaderRoute: typeof LocaleProfileChangePasswordImport
      parentRoute: typeof LocaleProfileRouteImport
    }
    '/$locale/profile/wishlist': {
      id: '/$locale/profile/wishlist'
      path: '/wishlist'
      fullPath: '/$locale/profile/wishlist'
      preLoaderRoute: typeof LocaleProfileWishlistImport
      parentRoute: typeof LocaleProfileRouteImport
    }
    '/$locale/profile/': {
      id: '/$locale/profile/'
      path: '/'
      fullPath: '/$locale/profile/'
      preLoaderRoute: typeof LocaleProfileIndexImport
      parentRoute: typeof LocaleProfileRouteImport
    }
    '/$locale/_catalog/brands/$slug': {
      id: '/$locale/_catalog/brands/$slug'
      path: '/brands/$slug'
      fullPath: '/$locale/brands/$slug'
      preLoaderRoute: typeof LocaleCatalogBrandsSlugImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_catalog/categories/$slug': {
      id: '/$locale/_catalog/categories/$slug'
      path: '/categories/$slug'
      fullPath: '/$locale/categories/$slug'
      preLoaderRoute: typeof LocaleCatalogCategoriesSlugImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_catalog/tags/$slug': {
      id: '/$locale/_catalog/tags/$slug'
      path: '/tags/$slug'
      fullPath: '/$locale/tags/$slug'
      preLoaderRoute: typeof LocaleCatalogTagsSlugImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_catalog/brands/': {
      id: '/$locale/_catalog/brands/'
      path: '/brands'
      fullPath: '/$locale/brands'
      preLoaderRoute: typeof LocaleCatalogBrandsIndexImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_catalog/categories/': {
      id: '/$locale/_catalog/categories/'
      path: '/categories'
      fullPath: '/$locale/categories'
      preLoaderRoute: typeof LocaleCatalogCategoriesIndexImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/profile/orders/': {
      id: '/$locale/profile/orders/'
      path: '/orders'
      fullPath: '/$locale/profile/orders'
      preLoaderRoute: typeof LocaleProfileOrdersIndexImport
      parentRoute: typeof LocaleProfileRouteImport
    }
    '/$locale/profile/orders/$id/track': {
      id: '/$locale/profile/orders/$id/track'
      path: '/orders/$id/track'
      fullPath: '/$locale/profile/orders/$id/track'
      preLoaderRoute: typeof LocaleProfileOrdersIdTrackImport
      parentRoute: typeof LocaleProfileRouteImport
    }
    '/$locale/profile/orders/$id/': {
      id: '/$locale/profile/orders/$id/'
      path: '/orders/$id'
      fullPath: '/$locale/profile/orders/$id'
      preLoaderRoute: typeof LocaleProfileOrdersIdIndexImport
      parentRoute: typeof LocaleProfileRouteImport
    }
  }
}

// Create and export the route tree

interface LocaleAuthRouteRouteChildren {
  LocaleAuthForgetPasswordRoute: typeof LocaleAuthForgetPasswordRoute
  LocaleAuthLoginRoute: typeof LocaleAuthLoginRoute
  LocaleAuthRegisterRoute: typeof LocaleAuthRegisterRoute
  LocaleAuthResetPasswordRoute: typeof LocaleAuthResetPasswordRoute
}

const LocaleAuthRouteRouteChildren: LocaleAuthRouteRouteChildren = {
  LocaleAuthForgetPasswordRoute: LocaleAuthForgetPasswordRoute,
  LocaleAuthLoginRoute: LocaleAuthLoginRoute,
  LocaleAuthRegisterRoute: LocaleAuthRegisterRoute,
  LocaleAuthResetPasswordRoute: LocaleAuthResetPasswordRoute,
}

const LocaleAuthRouteRouteWithChildren = LocaleAuthRouteRoute._addFileChildren(
  LocaleAuthRouteRouteChildren,
)

interface LocaleProfileRouteRouteChildren {
  LocaleProfileAddressesRoute: typeof LocaleProfileAddressesRoute
  LocaleProfileChangePasswordRoute: typeof LocaleProfileChangePasswordRoute
  LocaleProfileWishlistRoute: typeof LocaleProfileWishlistRoute
  LocaleProfileIndexRoute: typeof LocaleProfileIndexRoute
  LocaleProfileOrdersIndexRoute: typeof LocaleProfileOrdersIndexRoute
  LocaleProfileOrdersIdTrackRoute: typeof LocaleProfileOrdersIdTrackRoute
  LocaleProfileOrdersIdIndexRoute: typeof LocaleProfileOrdersIdIndexRoute
}

const LocaleProfileRouteRouteChildren: LocaleProfileRouteRouteChildren = {
  LocaleProfileAddressesRoute: LocaleProfileAddressesRoute,
  LocaleProfileChangePasswordRoute: LocaleProfileChangePasswordRoute,
  LocaleProfileWishlistRoute: LocaleProfileWishlistRoute,
  LocaleProfileIndexRoute: LocaleProfileIndexRoute,
  LocaleProfileOrdersIndexRoute: LocaleProfileOrdersIndexRoute,
  LocaleProfileOrdersIdTrackRoute: LocaleProfileOrdersIdTrackRoute,
  LocaleProfileOrdersIdIndexRoute: LocaleProfileOrdersIdIndexRoute,
}

const LocaleProfileRouteRouteWithChildren =
  LocaleProfileRouteRoute._addFileChildren(LocaleProfileRouteRouteChildren)

interface LocaleRouteChildren {
  LocaleAuthRouteRoute: typeof LocaleAuthRouteRouteWithChildren
  LocaleProfileRouteRoute: typeof LocaleProfileRouteRouteWithChildren
  LocaleCompareListRoute: typeof LocaleCompareListRoute
  LocaleContactUsRoute: typeof LocaleContactUsRoute
  LocaleFaqRoute: typeof LocaleFaqRoute
  LocalePrivacyPolicyRoute: typeof LocalePrivacyPolicyRoute
  LocaleTermsAndConditionsRoute: typeof LocaleTermsAndConditionsRoute
  LocaleIndexRoute: typeof LocaleIndexRoute
  LocaleCartCartRoute: typeof LocaleCartCartRoute
  LocaleCartCheckoutRoute: typeof LocaleCartCheckoutRoute
  LocaleCatalogShopRoute: typeof LocaleCatalogShopRoute
  LocaleProductsSlugRoute: typeof LocaleProductsSlugRoute
  LocaleCatalogBrandsSlugRoute: typeof LocaleCatalogBrandsSlugRoute
  LocaleCatalogCategoriesSlugRoute: typeof LocaleCatalogCategoriesSlugRoute
  LocaleCatalogTagsSlugRoute: typeof LocaleCatalogTagsSlugRoute
  LocaleCatalogBrandsIndexRoute: typeof LocaleCatalogBrandsIndexRoute
  LocaleCatalogCategoriesIndexRoute: typeof LocaleCatalogCategoriesIndexRoute
}

const LocaleRouteChildren: LocaleRouteChildren = {
  LocaleAuthRouteRoute: LocaleAuthRouteRouteWithChildren,
  LocaleProfileRouteRoute: LocaleProfileRouteRouteWithChildren,
  LocaleCompareListRoute: LocaleCompareListRoute,
  LocaleContactUsRoute: LocaleContactUsRoute,
  LocaleFaqRoute: LocaleFaqRoute,
  LocalePrivacyPolicyRoute: LocalePrivacyPolicyRoute,
  LocaleTermsAndConditionsRoute: LocaleTermsAndConditionsRoute,
  LocaleIndexRoute: LocaleIndexRoute,
  LocaleCartCartRoute: LocaleCartCartRoute,
  LocaleCartCheckoutRoute: LocaleCartCheckoutRoute,
  LocaleCatalogShopRoute: LocaleCatalogShopRoute,
  LocaleProductsSlugRoute: LocaleProductsSlugRoute,
  LocaleCatalogBrandsSlugRoute: LocaleCatalogBrandsSlugRoute,
  LocaleCatalogCategoriesSlugRoute: LocaleCatalogCategoriesSlugRoute,
  LocaleCatalogTagsSlugRoute: LocaleCatalogTagsSlugRoute,
  LocaleCatalogBrandsIndexRoute: LocaleCatalogBrandsIndexRoute,
  LocaleCatalogCategoriesIndexRoute: LocaleCatalogCategoriesIndexRoute,
}

const LocaleRouteWithChildren =
  LocaleRoute._addFileChildren(LocaleRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleAuthRouteRouteWithChildren
  '/$locale/profile': typeof LocaleProfileRouteRouteWithChildren
  '/$locale/compare-list': typeof LocaleCompareListRoute
  '/$locale/contact-us': typeof LocaleContactUsRoute
  '/$locale/faq': typeof LocaleFaqRoute
  '/$locale/privacy-policy': typeof LocalePrivacyPolicyRoute
  '/$locale/terms-and-conditions': typeof LocaleTermsAndConditionsRoute
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/forget-password': typeof LocaleAuthForgetPasswordRoute
  '/$locale/login': typeof LocaleAuthLoginRoute
  '/$locale/register': typeof LocaleAuthRegisterRoute
  '/$locale/reset-password': typeof LocaleAuthResetPasswordRoute
  '/$locale/cart': typeof LocaleCartCartRoute
  '/$locale/checkout': typeof LocaleCartCheckoutRoute
  '/$locale/shop': typeof LocaleCatalogShopRoute
  '/$locale/products/$slug': typeof LocaleProductsSlugRoute
  '/$locale/profile/addresses': typeof LocaleProfileAddressesRoute
  '/$locale/profile/change-password': typeof LocaleProfileChangePasswordRoute
  '/$locale/profile/wishlist': typeof LocaleProfileWishlistRoute
  '/$locale/profile/': typeof LocaleProfileIndexRoute
  '/$locale/brands/$slug': typeof LocaleCatalogBrandsSlugRoute
  '/$locale/categories/$slug': typeof LocaleCatalogCategoriesSlugRoute
  '/$locale/tags/$slug': typeof LocaleCatalogTagsSlugRoute
  '/$locale/brands': typeof LocaleCatalogBrandsIndexRoute
  '/$locale/categories': typeof LocaleCatalogCategoriesIndexRoute
  '/$locale/profile/orders': typeof LocaleProfileOrdersIndexRoute
  '/$locale/profile/orders/$id/track': typeof LocaleProfileOrdersIdTrackRoute
  '/$locale/profile/orders/$id': typeof LocaleProfileOrdersIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleIndexRoute
  '/$locale/compare-list': typeof LocaleCompareListRoute
  '/$locale/contact-us': typeof LocaleContactUsRoute
  '/$locale/faq': typeof LocaleFaqRoute
  '/$locale/privacy-policy': typeof LocalePrivacyPolicyRoute
  '/$locale/terms-and-conditions': typeof LocaleTermsAndConditionsRoute
  '/$locale/forget-password': typeof LocaleAuthForgetPasswordRoute
  '/$locale/login': typeof LocaleAuthLoginRoute
  '/$locale/register': typeof LocaleAuthRegisterRoute
  '/$locale/reset-password': typeof LocaleAuthResetPasswordRoute
  '/$locale/cart': typeof LocaleCartCartRoute
  '/$locale/checkout': typeof LocaleCartCheckoutRoute
  '/$locale/shop': typeof LocaleCatalogShopRoute
  '/$locale/products/$slug': typeof LocaleProductsSlugRoute
  '/$locale/profile/addresses': typeof LocaleProfileAddressesRoute
  '/$locale/profile/change-password': typeof LocaleProfileChangePasswordRoute
  '/$locale/profile/wishlist': typeof LocaleProfileWishlistRoute
  '/$locale/profile': typeof LocaleProfileIndexRoute
  '/$locale/brands/$slug': typeof LocaleCatalogBrandsSlugRoute
  '/$locale/categories/$slug': typeof LocaleCatalogCategoriesSlugRoute
  '/$locale/tags/$slug': typeof LocaleCatalogTagsSlugRoute
  '/$locale/brands': typeof LocaleCatalogBrandsIndexRoute
  '/$locale/categories': typeof LocaleCatalogCategoriesIndexRoute
  '/$locale/profile/orders': typeof LocaleProfileOrdersIndexRoute
  '/$locale/profile/orders/$id/track': typeof LocaleProfileOrdersIdTrackRoute
  '/$locale/profile/orders/$id': typeof LocaleProfileOrdersIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/_auth': typeof LocaleAuthRouteRouteWithChildren
  '/$locale/profile': typeof LocaleProfileRouteRouteWithChildren
  '/$locale/compare-list': typeof LocaleCompareListRoute
  '/$locale/contact-us': typeof LocaleContactUsRoute
  '/$locale/faq': typeof LocaleFaqRoute
  '/$locale/privacy-policy': typeof LocalePrivacyPolicyRoute
  '/$locale/terms-and-conditions': typeof LocaleTermsAndConditionsRoute
  '/$locale/': typeof LocaleIndexRoute
  '/$locale/_auth/forget-password': typeof LocaleAuthForgetPasswordRoute
  '/$locale/_auth/login': typeof LocaleAuthLoginRoute
  '/$locale/_auth/register': typeof LocaleAuthRegisterRoute
  '/$locale/_auth/reset-password': typeof LocaleAuthResetPasswordRoute
  '/$locale/_cart/cart': typeof LocaleCartCartRoute
  '/$locale/_cart/checkout': typeof LocaleCartCheckoutRoute
  '/$locale/_catalog/shop': typeof LocaleCatalogShopRoute
  '/$locale/products/$slug': typeof LocaleProductsSlugRoute
  '/$locale/profile/addresses': typeof LocaleProfileAddressesRoute
  '/$locale/profile/change-password': typeof LocaleProfileChangePasswordRoute
  '/$locale/profile/wishlist': typeof LocaleProfileWishlistRoute
  '/$locale/profile/': typeof LocaleProfileIndexRoute
  '/$locale/_catalog/brands/$slug': typeof LocaleCatalogBrandsSlugRoute
  '/$locale/_catalog/categories/$slug': typeof LocaleCatalogCategoriesSlugRoute
  '/$locale/_catalog/tags/$slug': typeof LocaleCatalogTagsSlugRoute
  '/$locale/_catalog/brands/': typeof LocaleCatalogBrandsIndexRoute
  '/$locale/_catalog/categories/': typeof LocaleCatalogCategoriesIndexRoute
  '/$locale/profile/orders/': typeof LocaleProfileOrdersIndexRoute
  '/$locale/profile/orders/$id/track': typeof LocaleProfileOrdersIdTrackRoute
  '/$locale/profile/orders/$id/': typeof LocaleProfileOrdersIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$locale'
    | '/$locale/profile'
    | '/$locale/compare-list'
    | '/$locale/contact-us'
    | '/$locale/faq'
    | '/$locale/privacy-policy'
    | '/$locale/terms-and-conditions'
    | '/$locale/'
    | '/$locale/forget-password'
    | '/$locale/login'
    | '/$locale/register'
    | '/$locale/reset-password'
    | '/$locale/cart'
    | '/$locale/checkout'
    | '/$locale/shop'
    | '/$locale/products/$slug'
    | '/$locale/profile/addresses'
    | '/$locale/profile/change-password'
    | '/$locale/profile/wishlist'
    | '/$locale/profile/'
    | '/$locale/brands/$slug'
    | '/$locale/categories/$slug'
    | '/$locale/tags/$slug'
    | '/$locale/brands'
    | '/$locale/categories'
    | '/$locale/profile/orders'
    | '/$locale/profile/orders/$id/track'
    | '/$locale/profile/orders/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$locale'
    | '/$locale/compare-list'
    | '/$locale/contact-us'
    | '/$locale/faq'
    | '/$locale/privacy-policy'
    | '/$locale/terms-and-conditions'
    | '/$locale/forget-password'
    | '/$locale/login'
    | '/$locale/register'
    | '/$locale/reset-password'
    | '/$locale/cart'
    | '/$locale/checkout'
    | '/$locale/shop'
    | '/$locale/products/$slug'
    | '/$locale/profile/addresses'
    | '/$locale/profile/change-password'
    | '/$locale/profile/wishlist'
    | '/$locale/profile'
    | '/$locale/brands/$slug'
    | '/$locale/categories/$slug'
    | '/$locale/tags/$slug'
    | '/$locale/brands'
    | '/$locale/categories'
    | '/$locale/profile/orders'
    | '/$locale/profile/orders/$id/track'
    | '/$locale/profile/orders/$id'
  id:
    | '__root__'
    | '/'
    | '/$locale'
    | '/$locale/_auth'
    | '/$locale/profile'
    | '/$locale/compare-list'
    | '/$locale/contact-us'
    | '/$locale/faq'
    | '/$locale/privacy-policy'
    | '/$locale/terms-and-conditions'
    | '/$locale/'
    | '/$locale/_auth/forget-password'
    | '/$locale/_auth/login'
    | '/$locale/_auth/register'
    | '/$locale/_auth/reset-password'
    | '/$locale/_cart/cart'
    | '/$locale/_cart/checkout'
    | '/$locale/_catalog/shop'
    | '/$locale/products/$slug'
    | '/$locale/profile/addresses'
    | '/$locale/profile/change-password'
    | '/$locale/profile/wishlist'
    | '/$locale/profile/'
    | '/$locale/_catalog/brands/$slug'
    | '/$locale/_catalog/categories/$slug'
    | '/$locale/_catalog/tags/$slug'
    | '/$locale/_catalog/brands/'
    | '/$locale/_catalog/categories/'
    | '/$locale/profile/orders/'
    | '/$locale/profile/orders/$id/track'
    | '/$locale/profile/orders/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocaleRoute: typeof LocaleRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocaleRoute: LocaleRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$locale"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$locale": {
      "filePath": "$locale/_auth",
      "children": [
        "/$locale/_auth",
        "/$locale/profile",
        "/$locale/compare-list",
        "/$locale/contact-us",
        "/$locale/faq",
        "/$locale/privacy-policy",
        "/$locale/terms-and-conditions",
        "/$locale/",
        "/$locale/_cart/cart",
        "/$locale/_cart/checkout",
        "/$locale/_catalog/shop",
        "/$locale/products/$slug",
        "/$locale/_catalog/brands/$slug",
        "/$locale/_catalog/categories/$slug",
        "/$locale/_catalog/tags/$slug",
        "/$locale/_catalog/brands/",
        "/$locale/_catalog/categories/"
      ]
    },
    "/$locale/_auth": {
      "filePath": "$locale/_auth/route.tsx",
      "parent": "/$locale",
      "children": [
        "/$locale/_auth/forget-password",
        "/$locale/_auth/login",
        "/$locale/_auth/register",
        "/$locale/_auth/reset-password"
      ]
    },
    "/$locale/profile": {
      "filePath": "$locale/profile/route.tsx",
      "parent": "/$locale",
      "children": [
        "/$locale/profile/addresses",
        "/$locale/profile/change-password",
        "/$locale/profile/wishlist",
        "/$locale/profile/",
        "/$locale/profile/orders/",
        "/$locale/profile/orders/$id/track",
        "/$locale/profile/orders/$id/"
      ]
    },
    "/$locale/compare-list": {
      "filePath": "$locale/compare-list.ts",
      "parent": "/$locale"
    },
    "/$locale/contact-us": {
      "filePath": "$locale/contact-us.tsx",
      "parent": "/$locale"
    },
    "/$locale/faq": {
      "filePath": "$locale/faq.tsx",
      "parent": "/$locale"
    },
    "/$locale/privacy-policy": {
      "filePath": "$locale/privacy-policy.tsx",
      "parent": "/$locale"
    },
    "/$locale/terms-and-conditions": {
      "filePath": "$locale/terms-and-conditions.tsx",
      "parent": "/$locale"
    },
    "/$locale/": {
      "filePath": "$locale/index.tsx",
      "parent": "/$locale"
    },
    "/$locale/_auth/forget-password": {
      "filePath": "$locale/_auth/forget-password.tsx",
      "parent": "/$locale/_auth"
    },
    "/$locale/_auth/login": {
      "filePath": "$locale/_auth/login.tsx",
      "parent": "/$locale/_auth"
    },
    "/$locale/_auth/register": {
      "filePath": "$locale/_auth/register.tsx",
      "parent": "/$locale/_auth"
    },
    "/$locale/_auth/reset-password": {
      "filePath": "$locale/_auth/reset-password.tsx",
      "parent": "/$locale/_auth"
    },
    "/$locale/_cart/cart": {
      "filePath": "$locale/_cart/cart.tsx",
      "parent": "/$locale"
    },
    "/$locale/_cart/checkout": {
      "filePath": "$locale/_cart/checkout.tsx",
      "parent": "/$locale"
    },
    "/$locale/_catalog/shop": {
      "filePath": "$locale/_catalog/shop.tsx",
      "parent": "/$locale"
    },
    "/$locale/products/$slug": {
      "filePath": "$locale/products/$slug.tsx",
      "parent": "/$locale"
    },
    "/$locale/profile/addresses": {
      "filePath": "$locale/profile/addresses.tsx",
      "parent": "/$locale/profile"
    },
    "/$locale/profile/change-password": {
      "filePath": "$locale/profile/change-password.tsx",
      "parent": "/$locale/profile"
    },
    "/$locale/profile/wishlist": {
      "filePath": "$locale/profile/wishlist.tsx",
      "parent": "/$locale/profile"
    },
    "/$locale/profile/": {
      "filePath": "$locale/profile/index.tsx",
      "parent": "/$locale/profile"
    },
    "/$locale/_catalog/brands/$slug": {
      "filePath": "$locale/_catalog/brands/$slug.tsx",
      "parent": "/$locale"
    },
    "/$locale/_catalog/categories/$slug": {
      "filePath": "$locale/_catalog/categories/$slug.tsx",
      "parent": "/$locale"
    },
    "/$locale/_catalog/tags/$slug": {
      "filePath": "$locale/_catalog/tags/$slug.tsx",
      "parent": "/$locale"
    },
    "/$locale/_catalog/brands/": {
      "filePath": "$locale/_catalog/brands/index.tsx",
      "parent": "/$locale"
    },
    "/$locale/_catalog/categories/": {
      "filePath": "$locale/_catalog/categories/index.tsx",
      "parent": "/$locale"
    },
    "/$locale/profile/orders/": {
      "filePath": "$locale/profile/orders/index.tsx",
      "parent": "/$locale/profile"
    },
    "/$locale/profile/orders/$id/track": {
      "filePath": "$locale/profile/orders/$id/track.tsx",
      "parent": "/$locale/profile"
    },
    "/$locale/profile/orders/$id/": {
      "filePath": "$locale/profile/orders/$id/index.tsx",
      "parent": "/$locale/profile"
    }
  }
}
ROUTE_MANIFEST_END */
